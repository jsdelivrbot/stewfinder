container_commands:
  02_collectstatic:
    command: "python manage.py collectstatic --noinput"
  03_createsu:
    command: "python manage.py createsu"
    leader_only: true
  04_fix_static_cors:
    command: "/tmp/fix_static_cors.sh"
  remove_old_cron:
    command: "rm -f /etc/cron.d/*.bak"

option_settings:
  "aws:elasticbeanstalk:application:environment":
    DJANGO_SETTINGS_MODULE: "backend.settings"
    PYTHONPATH: "$PYTHONPATH"
  "aws:elasticbeanstalk:container:python":
    WSGIPath: "backend/wsgi.py"
  "aws:elasticbeanstalk:container:python:staticfiles":
    /static/: "static/"

packages:
  yum:
    postgresql95-devel: []
  pip3:
    django-cors-headers: "2.2.0"

files:
  "/etc/cron.d/process_tasks_cron":
    mode: "000644"
    owner: root
    group: root
    content: |
       * * * * * root /usr/local/bin/99_process_tasks.sh

  "/usr/local/bin/99_process_tasks.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      date > /tmp/date
      source /opt/python/run/venv/bin/activate
      source /opt/python/current/env
      cd /opt/python/current/app
      python manage.py msu_post > /tmp/cronlog

  "/etc/httpd/conf.d/cors.conf" :
    mode: "000644"
    owner: root
    group: root
    content: |
      <Location "/">
        Header set Access-Control-Allow-Origin: *
        Header set Access-Control-Allow-Methods: "POST, GET, PUT, DELETE, OPTIONS"
        Header add Access-Control-Allow-Headers: "Authorization, Content-Type, Accept"
        Header set Access-Control-Allow-Credentials: true
 
        SetOutputFilter DEFLATE
      </Location>
  "/tmp/fix_static_cors.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      pushd $(/opt/elasticbeanstalk/bin/get-config container -k config_staging_dir)
      echo "Adding CORS Config"
  "/etc/nginx/conf.d/static_cors.config":
    mode: "000644"
    owner: root
    group: root
    content: |
        #
        # Wide-open CORS config for nginx
        #
        if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' '*';
          #
          # Om nom nom cookies
          #
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          #
          # Custom headers and headers various browsers *should* be OK with but aren't
          #
          add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
          #
          # Tell client that this pre-flight info is valid for 20 days
          #
          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain charset=UTF-8';
          add_header 'Content-Length' 0;
          return 204;
        }
        if ($request_method = 'POST') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        }
        if ($request_method = 'GET') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        }
